package com.diffblue.demo.ecommerce.models;

import com.diffblue.deeptestutils.Reflector;
import com.diffblue.demo.ecommerce.models.Order;
import com.diffblue.demo.ecommerce.models.OrderItem;
import com.diffblue.demo.ecommerce.models.Product;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.rules.Timeout;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class OrderItemTest {

  @Rule public ExpectedException thrown = ExpectedException.none();
  @Rule public Timeout globalTimeout = new Timeout(10000);

  /* testedClasses: OrderItem */
  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void constructorInputNotNullNotNullZeroOutputVoid() throws InvocationTargetException {

    // Arrange
    final Order order = (Order)Reflector.getInstance("com.diffblue.demo.ecommerce.models.Order");
    order.setLastName(null);
    order.setPhoneNumber(null);
    order.setOrderRef(null);
    order.setShippingAddress(null);
    order.setFirstName(null);
    order.setEmail(null);
    order.setId(0);
    final Product product = new Product();
    final int quantity = 0;

    // Act, creating object to test constructor
    final OrderItem objectUnderTest = new OrderItem(order, product, quantity);

    // Method returns void, testing that no exception is thrown
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void getIdOutputZero() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);

    // Act
    final int retval = objectUnderTest.getId();

    // Assert result
    Assert.assertEquals(0, retval);
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void getOrderOutputNull() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);

    // Act
    final Order retval = objectUnderTest.getOrder();

    // Assert result
    Assert.assertNull(retval);
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void getProductOutputNull() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);

    // Act
    final Product retval = objectUnderTest.getProduct();

    // Assert result
    Assert.assertNull(retval);
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void getQuantityOutputZero() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);

    // Act
    final int retval = objectUnderTest.getQuantity();

    // Assert result
    Assert.assertEquals(0, retval);
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void setIdInputZeroOutputVoid() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);
    final int id = 0;

    // Act
    objectUnderTest.setId(id);

    // Method returns void, testing that no exception is thrown
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void setOrderInputNotNullOutputVoid() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);
    final Order order = (Order)Reflector.getInstance("com.diffblue.demo.ecommerce.models.Order");
    order.setLastName(null);
    order.setPhoneNumber(null);
    order.setOrderRef(null);
    order.setShippingAddress(null);
    order.setFirstName(null);
    order.setEmail(null);
    order.setId(0);

    // Act
    objectUnderTest.setOrder(order);

    // Method returns void, testing that no exception is thrown
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void setProductInputNotNullOutputVoid() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);
    final Product product = new Product();

    // Act
    objectUnderTest.setProduct(product);

    // Method returns void, testing that no exception is thrown
  }

  /*
   * Test generated by Diffblue Cover.
   * This test case covers the entire method.
   */

  @Test
  public void setQuantityInputZeroOutputVoid() throws InvocationTargetException {

    // Arrange
    final OrderItem objectUnderTest =
        (OrderItem)Reflector.getInstance("com.diffblue.demo.ecommerce.models.OrderItem");
    objectUnderTest.setOrder(null);
    objectUnderTest.setProduct(null);
    objectUnderTest.setQuantity(0);
    objectUnderTest.setId(0);
    final int quantity = 0;

    // Act
    objectUnderTest.setQuantity(quantity);

    // Method returns void, testing that no exception is thrown
  }
}

package com.diffblue.demo.tdd.controllers;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.deeptestutils.CompareWithFieldList;
import com.diffblue.deeptestutils.Reflector;

public class CartControllerTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: CartController */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 24 branch to line 24
   * conditional line 25 branch to line 25
   */

  @org.junit.Test
  public void com_diffblue_demo_tdd_controllers_CartController__init__000_b2d5d94c9189c8() throws Throwable {

    com.diffblue.demo.tdd.controllers.CartController instance;
    {
      /* Arrange */
      com.diffblue.demo.tdd.repositories.ProductRepository productRepo = null;

      /* Act */
      /* Creating object to test constructor */
      instance = new com.diffblue.demo.tdd.controllers.CartController(productRepo);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_diffblue_demo_tdd_controllers_CartController_addCartItem_000_a2d4e615a00da5d() throws Throwable {

    String retval;
    {
      /* Arrange */
      com.diffblue.demo.tdd.controllers.CartController param_1 = (com.diffblue.demo.tdd.controllers.CartController) Reflector.getInstance("com.diffblue.demo.tdd.controllers.CartController");
      Reflector.setField(param_1, "productRepo", null);
      javax.servlet.http.HttpServletRequest request = null;
      javax.servlet.http.HttpSession session = null;

      /* Act */
      retval = param_1.addCartItem(request, session);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      Assert.assertEquals("redirect:/cart", retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_diffblue_demo_tdd_controllers_CartController_addProductToCart_000_e13c6234c2bc7f1b() throws Throwable {

    java.util.HashMap<Integer, Integer> retval;
    {
      /* Arrange */
      com.diffblue.demo.tdd.controllers.CartController param_2 = (com.diffblue.demo.tdd.controllers.CartController) Reflector.getInstance("com.diffblue.demo.tdd.controllers.CartController");
      com.diffblue.demo.tdd.repositories.ProductRepository productRepository = (com.diffblue.demo.tdd.repositories.ProductRepository) Reflector.getInstance("com.diffblue.demo.tdd.repositories.ProductRepository");
      Reflector.setField(param_2, "productRepo", productRepository);
      String productParam = null;
      java.util.HashMap<Integer, Integer> cartItems = null;

      /* Act */
      thrown.expect(IllegalArgumentException.class);
      retval = param_2.addProductToCart(productParam, cartItems);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 36 branch to line 36
   * conditional line 36 branch to line 41
   */
  @org.junit.Test
  public void com_diffblue_demo_tdd_controllers_CartController_addProductToCart_000_289f4df8a9fea2b8() throws Throwable {
    java.util.HashMap<Integer, Integer> retval;
    {
      /* Arrange */
      com.diffblue.demo.tdd.controllers.CartController param_4 = (com.diffblue.demo.tdd.controllers.CartController) Reflector.getInstance("com.diffblue.demo.tdd.controllers.CartController");
      Reflector.setField(param_4, "productRepo", null);
      String productParam = "";
      java.util.HashMap<Integer, Integer> cartItems = new java.util.HashMap<Integer, Integer>();

      /* Act */
      thrown.expect(IllegalArgumentException.class);
      retval = param_4.addProductToCart(productParam, cartItems);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 36 branch to line 36
   * conditional line 36 branch to line 39
   * conditional line 39 branch to line 39
   * conditional line 40 branch to line 40
   */

  @org.junit.Test
  public void com_diffblue_demo_tdd_controllers_CartController_addProductToCart_003_1f81d6a7281f8591() throws Throwable {

    java.util.HashMap<Integer, Integer> retval;
    {
      /* Setup mocks */
      com.diffblue.demo.tdd.models.Product mock_instance1 = (com.diffblue.demo.tdd.models.Product) Reflector.getInstance("com.diffblue.demo.tdd.models.Product");
      Reflector.setField(mock_instance1, "description", "");
      Reflector.setField(mock_instance1, "price", 0.0);
      Reflector.setField(mock_instance1, "id", 0);
      Reflector.setField(mock_instance1, "name", "");
      final java.util.ArrayList<com.diffblue.demo.tdd.models.Product> com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list = new java.util.ArrayList<com.diffblue.demo.tdd.models.Product>();
      final java.util.ArrayList<Object[]> com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_expectation_list = new java.util.ArrayList<Object[]>();
      final com.diffblue.deeptestutils.IterAnswer com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_object = new com.diffblue.deeptestutils.IterAnswer<com.diffblue.demo.tdd.models.Product> ("com.diffblue.demo.tdd.repositories.ProductRepository", "findById", com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list, com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_expectation_list);
      com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list.add(mock_instance1);
      java.util.ArrayList<com.diffblue.demo.tdd.repositories.ProductRepository> com_diffblue_demo_tdd_repositories_ProductRepository_instances = new java.util.ArrayList<com.diffblue.demo.tdd.repositories.ProductRepository>();

      /* Arrange */
      com.diffblue.demo.tdd.controllers.CartController param_5 = (com.diffblue.demo.tdd.controllers.CartController) Reflector.getInstance("com.diffblue.demo.tdd.controllers.CartController");
      com.diffblue.demo.tdd.repositories.ProductRepository productRepository = (com.diffblue.demo.tdd.repositories.ProductRepository) org.mockito.Mockito.mock(com.diffblue.demo.tdd.repositories.ProductRepository.class);
      Reflector.setField(param_5, "productRepo", productRepository);
      com_diffblue_demo_tdd_repositories_ProductRepository_instances.add(productRepository);
      String productParam = "0";
      java.util.HashMap<Integer, Integer> cartItems = new java.util.HashMap<Integer, Integer>();

      for(com.diffblue.demo.tdd.repositories.ProductRepository com_diffblue_demo_tdd_repositories_ProductRepository_iter : com_diffblue_demo_tdd_repositories_ProductRepository_instances)
        org.mockito.Mockito.when(com_diffblue_demo_tdd_repositories_ProductRepository_iter.findById(org.mockito.Matchers.anyInt())).thenAnswer(com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_object);

      /* Act */
      retval = param_5.addProductToCart(productParam, cartItems);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      java.util.HashMap<Integer, Integer> hashMap = new java.util.HashMap<Integer, Integer>();
      hashMap.put(0, 1);
      Assert.assertEquals(hashMap, retval);
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 36 branch to line 36
   * conditional line 36 branch to line 39
   * conditional line 39 branch to line 39
   * conditional line 40 branch to line 40
   * conditional line 42 branch to line 42
   */

  @org.junit.Test
  public void com_diffblue_demo_tdd_controllers_CartController_addProductToCart_003_541a5bfc47f726ca() throws Throwable {

    java.util.HashMap<Integer, Integer> retval;
    {
      /* Setup mocks */
      final java.util.ArrayList<com.diffblue.demo.tdd.models.Product> com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list = new java.util.ArrayList<com.diffblue.demo.tdd.models.Product>();
      final java.util.ArrayList<Object[]> com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_expectation_list = new java.util.ArrayList<Object[]>();
      final com.diffblue.deeptestutils.IterAnswer com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_object = new com.diffblue.deeptestutils.IterAnswer<com.diffblue.demo.tdd.models.Product> ("com.diffblue.demo.tdd.repositories.ProductRepository", "findById", com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list, com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_expectation_list);
      com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list.add(null);
      java.util.ArrayList<com.diffblue.demo.tdd.repositories.ProductRepository> com_diffblue_demo_tdd_repositories_ProductRepository_instances = new java.util.ArrayList<com.diffblue.demo.tdd.repositories.ProductRepository>();

      /* Arrange */
      com.diffblue.demo.tdd.controllers.CartController param_7 = (com.diffblue.demo.tdd.controllers.CartController) Reflector.getInstance("com.diffblue.demo.tdd.controllers.CartController");
      com.diffblue.demo.tdd.repositories.ProductRepository productRepository = (com.diffblue.demo.tdd.repositories.ProductRepository) org.mockito.Mockito.mock(com.diffblue.demo.tdd.repositories.ProductRepository.class);
      Reflector.setField(param_7, "productRepo", productRepository);
      com_diffblue_demo_tdd_repositories_ProductRepository_instances.add(productRepository);
      String productParam = "+2";
      java.util.HashMap<Integer, Integer> cartItems = new java.util.HashMap<Integer, Integer>();
      cartItems.put(null, 0);

      for(com.diffblue.demo.tdd.repositories.ProductRepository com_diffblue_demo_tdd_repositories_ProductRepository_iter : com_diffblue_demo_tdd_repositories_ProductRepository_instances)
        org.mockito.Mockito.when(com_diffblue_demo_tdd_repositories_ProductRepository_iter.findById(org.mockito.Matchers.anyInt())).thenAnswer(com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_object);

      /* Act */
      thrown.expect(IllegalArgumentException.class);
      retval = param_7.addProductToCart(productParam, cartItems);

      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 36 branch to line 36
   * conditional line 36 branch to line 39
   * conditional line 39 branch to line 39
   * conditional line 40 branch to line 40
   * conditional line 42 branch to line 42
   * conditional line 43 branch to line 44
   * conditional line 44 branch to line 44
   * conditional line 45 branch to line 45
   * conditional line 45 branch to line 47
   * conditional line 47 branch to line 47
   */

  @org.junit.Test
  public void com_diffblue_demo_tdd_controllers_CartController_addProductToCart_004_bf40b28650c8380b() throws Throwable {

    java.util.HashMap<Integer, Integer> retval;
    {
      /* Setup mocks */
      com.diffblue.demo.tdd.models.Product mock_instance1 = (com.diffblue.demo.tdd.models.Product) Reflector.getInstance("com.diffblue.demo.tdd.models.Product");
      Reflector.setField(mock_instance1, "description", "");
      Reflector.setField(mock_instance1, "price", 0.0);
      Reflector.setField(mock_instance1, "id", 0);
      Reflector.setField(mock_instance1, "name", "A");
      final java.util.ArrayList<com.diffblue.demo.tdd.models.Product> com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list = new java.util.ArrayList<com.diffblue.demo.tdd.models.Product>();
      final java.util.ArrayList<Object[]> com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_expectation_list = new java.util.ArrayList<Object[]>();
      final com.diffblue.deeptestutils.IterAnswer com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_object = new com.diffblue.deeptestutils.IterAnswer<com.diffblue.demo.tdd.models.Product> ("com.diffblue.demo.tdd.repositories.ProductRepository", "findById", com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list, com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_expectation_list);
      com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_list.add(mock_instance1);
      java.util.ArrayList<com.diffblue.demo.tdd.repositories.ProductRepository> com_diffblue_demo_tdd_repositories_ProductRepository_instances = new java.util.ArrayList<com.diffblue.demo.tdd.repositories.ProductRepository>();

      /* Arrange */
      com.diffblue.demo.tdd.controllers.CartController param_8 = (com.diffblue.demo.tdd.controllers.CartController) Reflector.getInstance("com.diffblue.demo.tdd.controllers.CartController");
      com.diffblue.demo.tdd.repositories.ProductRepository productRepository = (com.diffblue.demo.tdd.repositories.ProductRepository) org.mockito.Mockito.mock(com.diffblue.demo.tdd.repositories.ProductRepository.class);
      Reflector.setField(param_8, "productRepo", productRepository);
      com_diffblue_demo_tdd_repositories_ProductRepository_instances.add(productRepository);
      String productParam = "7";
      java.util.HashMap<Integer, Integer> cartItems = new java.util.HashMap<Integer, Integer>();
      cartItems.put(7, 0);

      for(com.diffblue.demo.tdd.repositories.ProductRepository com_diffblue_demo_tdd_repositories_ProductRepository_iter : com_diffblue_demo_tdd_repositories_ProductRepository_instances)
        org.mockito.Mockito.when(com_diffblue_demo_tdd_repositories_ProductRepository_iter.findById(org.mockito.Matchers.anyInt())).thenAnswer(com_diffblue_demo_tdd_repositories_ProductRepository_findById_int_answer_object);

      /* Act */
      retval = param_8.addProductToCart(productParam, cartItems);
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
      java.util.HashMap<Integer, Integer> hashMap = new java.util.HashMap<Integer, Integer>();
      hashMap.put(7, 1);
      Assert.assertEquals(hashMap, retval);
    }
  }
}
